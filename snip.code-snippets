{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	// "rafc Alternativo": {
	// 	"scope": "javascript,typescript, react",
	// 	"prefix": "sf",
	// 	"body": [
	// 		`const $Â´{TM_FILENAME} = () => {
	// 			return (
	// 			  <div>xxx</div>
	// 			)
	// 		  }
	// 		  export default xxx;
	// 	],		


		// "description": "rafc Alternativo"`
	// }
	"rafc Alternativo": {
		"scope": "javascript,typescript, javascriptreact, react",
		"prefix": "rf",
		"body": [
			"const ${TM_FILENAME_BASE} = () => {",
			"\treturn (",
			"\t\t<div>",
			"\t\t\t<h1>${TM_FILENAME_BASE}</h1>",
			"\t\t</div>",
			"\t)",
			"}",
			"\n",
			"export default ${TM_FILENAME_BASE};"
		],
		"description": "rafc Alternativo"
	},

	"console log die": {
		"scope": "javascript,typescript, javascriptreact, react",
		"prefix": "cl",
		"body": [
			"console.log($0)"			
		],
		
		"description": "console.log shortcut"
	}
}

// "console.log('hola')",
// 			"\tconsole.log('chau')"
// "const ${TM_FILENAME} = () => {",
// "/treturn (",
// "/t/t<div>${TM_FILENAME}</div>",
// "/t)",
// "}",

// "export default ${TM_FILENAME};"